{"ast":null,"code":"var _jsxFileName = \"/Users/sulki/Desktop/coding/auth prac/frontend/src/pages/EditEvent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useActionData, useRouteLoaderData } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { getAuthToken } from \"../util/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditEventPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"patch\",\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_s(EditEventPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EditEventPage;\nexport async function action() {\n  _s2();\n  const token = getAuthToken();\n  const eventData = useActionData();\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not create a new event.\"\n    }, {\n      status: 500\n    });\n  }\n}\n_s2(action, \"jUehon1GWQLvffzzpoIw5XneXUc=\", false, function () {\n  return [useActionData];\n});\nexport default EditEventPage;\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["useActionData","useRouteLoaderData","EventForm","getAuthToken","jsxDEV","_jsxDEV","EditEventPage","_s","data","method","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_s2","token","eventData","response","fetch","headers","body","JSON","stringify","status","ok","json","message","$RefreshReg$"],"sources":["/Users/sulki/Desktop/coding/auth prac/frontend/src/pages/EditEvent.js"],"sourcesContent":["import { useActionData, useRouteLoaderData } from \"react-router-dom\";\n\nimport EventForm from \"../components/EventForm\";\nimport { getAuthToken } from \"../util/auth\";\n\nfunction EditEventPage() {\n  const data = useRouteLoaderData(\"event-detail\");\n\n  return <EventForm method=\"patch\" event={data.event} />;\n}\n\nexport async function action() {\n  const token = getAuthToken();\n  const eventData = useActionData();\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({ message: \"Could not create a new event.\" }, { status: 500 });\n  }\n}\n\nexport default EditEventPage;\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,kBAAkB,QAAQ,kBAAkB;AAEpE,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOI,OAAA,CAACH,SAAS;IAACO,MAAM,EAAC,OAAO;IAACC,KAAK,EAAEF,IAAI,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxD;AAACP,EAAA,CAJQD,aAAa;EAAA,QACPL,kBAAkB;AAAA;AAAAc,EAAA,GADxBT,aAAa;AAMtB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAAAC,GAAA;EAC7B,MAAMC,KAAK,GAAGf,YAAY,EAAE;EAC5B,MAAMgB,SAAS,GAAGnB,aAAa,EAAE;EACjC,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DZ,MAAM,EAAE,MAAM;IACda,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,SAAS;EAChC,CAAC,CAAC;EACF,IAAIC,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAIN,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IACtD,OAAON,QAAQ;EACjB;EACA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAgC,CAAC,EAAE;MAAEH,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3E;AACF;AAACT,GAAA,CAhBqBD,MAAM;EAAA,QAERhB,aAAa;AAAA;AAgBjC,eAAeM,aAAa;AAAC,IAAAS,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}